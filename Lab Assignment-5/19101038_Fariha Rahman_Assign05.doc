# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TDjBKZVCFY98QXy-5vaZMI4UO_e6PsW1
"""

import pandas as pd
import numpy as np
import sklearn
from sklearn import tree
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score

volunteer = pd.read_csv('/content/breast cancer classification dataset.csv')
volunteer.head(6)

volunteer.shape

volunteer.isnull().sum()

impute = SimpleImputer(missing_values=np.nan, strategy='mean')

impute.fit(volunteer[['radius_mean']])

volunteer['radius_mean'] = impute.transform(volunteer[['radius_mean']])


impute.fit(volunteer[['fractal_dimension_worst']])

volunteer['fractal_dimension_worst'] = impute.transform(volunteer[['fractal_dimension_worst']])

volunteer.isnull().sum()

volunteer.info()

from sklearn.model_selection import train_test_split
X = volunteer.iloc[:,2:32]
y = volunteer.iloc[:,1]
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=1)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(X_train, y_train)
predictions = model.predict(X_test)
print(predictions)

logisticAccuracy =accuracy_score(y_test, predictions)
print(logisticAccuracy)

from sklearn.tree import DecisionTreeClassifier
clf = DecisionTreeClassifier(criterion='entropy',random_state=1)
clf.fit(X_train,y_train)
y_pred = clf.predict(X_test)
decisionTreeAccuracy=accuracy_score(y_pred,y_test)
print(decisionTreeAccuracy)

from sklearn import tree
fig, axes = plt.subplots(nrows = 1,ncols = 1,figsize = (4,4), dpi=1000)
tree.plot_tree(clf,
               feature_names = X.columns, 
               class_names=['M','B'],
               filled = True);

process = ['Logistic Regression', 'Decision Tree']
process

accuracy = [logisticAccuracy, decisionTreeAccuracy]
accuracy

fig = plt.figure(figsize = (5, 5))
plt.bar(process, accuracy)
plt.xlabel("Process")
plt.ylabel("Accuracy")
plt.title("Logistic Regression VS Decision Tree")
plt.show()